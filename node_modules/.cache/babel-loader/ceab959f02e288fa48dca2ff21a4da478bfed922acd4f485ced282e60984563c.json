{"ast":null,"code":"var _jsxFileName = \"/home/workspace/reactjs/coding-practices/nxtWatchApp/src/components/RestoApp/index.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect, useContext } from 'react';\nimport Loader from 'react-loader-spinner';\nimport Header from '../Header';\nimport Categories from '../Categories';\nimport CurrentDishesList from '../CurrentDishesList';\nimport MyContext from '../../context/MyContext';\nimport './index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst apiStatus = {\n  success: 'SUCCESS',\n  failure: 'FAILURE',\n  loader: 'LOADER'\n};\nconst RestoApp = () => {\n  _s();\n  const {\n    updateRestaurantName,\n    updateRestaurantData\n  } = useContext(MyContext);\n  const [currentApiStatus, setCurrentApiStatus] = useState(apiStatus.loader);\n  useEffect(() => {\n    const fetchData = async () => {\n      const url = 'https://apis2.ccbp.in/restaurant-app/restaurant-menu-list-details';\n      try {\n        const response = await fetch(url);\n        if (response.ok) {\n          const responseData = await response.json();\n          const restaurantName = responseData[0].restaurant_name;\n          updateRestaurantName(restaurantName);\n          let tableMenuList = responseData[0].table_menu_list;\n          tableMenuList = tableMenuList.map(eachItem => ({\n            categoryDishes: eachItem.category_dishes.map(eachDish => ({\n              addonCat: eachDish.addonCat,\n              dishAvailability: eachDish.dish_Availability,\n              dishType: eachDish.dish_Type,\n              dishCalories: eachDish.dish_calories,\n              dishCurrency: eachDish.dish_currency,\n              dishDescription: eachDish.dish_description,\n              dishId: eachDish.dish_id,\n              dishImage: eachDish.dish_image,\n              dishName: eachDish.dish_name,\n              dishPrice: eachDish.dish_price,\n              nexturl: eachDish.nexturl,\n              quantity: 0 // Initialize quantity to 0\n            })),\n            menuCategory: eachItem.menu_category,\n            menuCategoryId: eachItem.menu_category_id,\n            menuCategoryImage: eachItem.menu_category_image,\n            nexturl: eachItem.nexturl\n          }));\n          updateRestaurantData(tableMenuList);\n          setCurrentApiStatus(apiStatus.success);\n        } else {\n          console.error('Failed to fetch data', response);\n          setCurrentApiStatus(apiStatus.failure);\n        }\n      } catch (error) {\n        console.error('Error fetching data', error);\n        setCurrentApiStatus(apiStatus.failure);\n      }\n    };\n    fetchData();\n  }, []); // Empty dependency array to ensure it runs only once when the component mounts\n\n  const renderSuccessView = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"resto-container\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Categories, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CurrentDishesList, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n  const onClickRetry = () => {\n    setCurrentApiStatus(apiStatus.loader);\n  };\n  const renderFailureView = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"common-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"not-found-heading\",\n      children: \"Not Found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onClickRetry,\n      type: \"button\",\n      className: \"retry-button\",\n      children: \"Retry\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n  const renderApiStatus = () => {\n    if (currentApiStatus === apiStatus.success) {\n      return renderSuccessView();\n    }\n    return renderFailureView();\n  };\n  const renderLoader = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"common-container\",\n    children: /*#__PURE__*/_jsxDEV(Loader, {\n      type: \"ThreeDots\",\n      height: 80,\n      width: 80,\n      color: \"black\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: currentApiStatus === apiStatus.loader ? renderLoader() : renderApiStatus()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this);\n};\n_s(RestoApp, \"JLWajZQvUqU0Qqo9h1dFjyiPOec=\");\n_c = RestoApp;\nexport default RestoApp;\nvar _c;\n$RefreshReg$(_c, \"RestoApp\");","map":{"version":3,"names":["useState","useEffect","useContext","Loader","Header","Categories","CurrentDishesList","MyContext","jsxDEV","_jsxDEV","apiStatus","success","failure","loader","RestoApp","_s","updateRestaurantName","updateRestaurantData","currentApiStatus","setCurrentApiStatus","fetchData","url","response","fetch","ok","responseData","json","restaurantName","restaurant_name","tableMenuList","table_menu_list","map","eachItem","categoryDishes","category_dishes","eachDish","addonCat","dishAvailability","dish_Availability","dishType","dish_Type","dishCalories","dish_calories","dishCurrency","dish_currency","dishDescription","dish_description","dishId","dish_id","dishImage","dish_image","dishName","dish_name","dishPrice","dish_price","nexturl","quantity","menuCategory","menu_category","menuCategoryId","menu_category_id","menuCategoryImage","menu_category_image","console","error","renderSuccessView","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClickRetry","renderFailureView","onClick","type","renderApiStatus","renderLoader","height","width","color","_c","$RefreshReg$"],"sources":["/home/workspace/reactjs/coding-practices/nxtWatchApp/src/components/RestoApp/index.js"],"sourcesContent":["import {useState, useEffect, useContext} from 'react'\nimport Loader from 'react-loader-spinner'\nimport Header from '../Header'\nimport Categories from '../Categories'\nimport CurrentDishesList from '../CurrentDishesList'\nimport MyContext from '../../context/MyContext'\nimport './index.css'\n\nconst apiStatus = {\n  success: 'SUCCESS',\n  failure: 'FAILURE',\n  loader: 'LOADER',\n}\n\nconst RestoApp = () => {\n  const {updateRestaurantName, updateRestaurantData} = useContext(MyContext)\n  const [currentApiStatus, setCurrentApiStatus] = useState(apiStatus.loader)\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const url =\n        'https://apis2.ccbp.in/restaurant-app/restaurant-menu-list-details'\n\n      try {\n        const response = await fetch(url)\n        if (response.ok) {\n          const responseData = await response.json()\n          const restaurantName = responseData[0].restaurant_name\n          updateRestaurantName(restaurantName)\n          let tableMenuList = responseData[0].table_menu_list\n          tableMenuList = tableMenuList.map(eachItem => ({\n            categoryDishes: eachItem.category_dishes.map(eachDish => ({\n              addonCat: eachDish.addonCat,\n              dishAvailability: eachDish.dish_Availability,\n              dishType: eachDish.dish_Type,\n              dishCalories: eachDish.dish_calories,\n              dishCurrency: eachDish.dish_currency,\n              dishDescription: eachDish.dish_description,\n              dishId: eachDish.dish_id,\n              dishImage: eachDish.dish_image,\n              dishName: eachDish.dish_name,\n              dishPrice: eachDish.dish_price,\n              nexturl: eachDish.nexturl,\n              quantity: 0, // Initialize quantity to 0\n            })),\n            menuCategory: eachItem.menu_category,\n            menuCategoryId: eachItem.menu_category_id,\n            menuCategoryImage: eachItem.menu_category_image,\n            nexturl: eachItem.nexturl,\n          }))\n          updateRestaurantData(tableMenuList)\n          setCurrentApiStatus(apiStatus.success)\n        } else {\n          console.error('Failed to fetch data', response)\n          setCurrentApiStatus(apiStatus.failure)\n        }\n      } catch (error) {\n        console.error('Error fetching data', error)\n        setCurrentApiStatus(apiStatus.failure)\n      }\n    }\n\n    fetchData()\n  }, []) // Empty dependency array to ensure it runs only once when the component mounts\n\n  const renderSuccessView = () => (\n    <div className=\"resto-container\">\n      <Header />\n      <Categories />\n      <CurrentDishesList />\n    </div>\n  )\n\n  const onClickRetry = () => {\n    setCurrentApiStatus(apiStatus.loader)\n  }\n\n  const renderFailureView = () => (\n    <div className=\"common-container\">\n      <p className=\"not-found-heading\">Not Found</p>\n      <button onClick={onClickRetry} type=\"button\" className=\"retry-button\">\n        Retry\n      </button>\n    </div>\n  )\n\n  const renderApiStatus = () => {\n    if (currentApiStatus === apiStatus.success) {\n      return renderSuccessView()\n    }\n\n    return renderFailureView()\n  }\n\n  const renderLoader = () => (\n    <div className=\"common-container\">\n      <Loader type=\"ThreeDots\" height={80} width={80} color=\"black\" />\n    </div>\n  )\n\n  return (\n    <div>\n      {currentApiStatus === apiStatus.loader\n        ? renderLoader()\n        : renderApiStatus()}\n    </div>\n  )\n}\n\nexport default RestoApp\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}